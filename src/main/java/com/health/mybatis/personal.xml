<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.health.mybatis">

    <select id="memberWishPosts" resultType="Map" parameterType="Map">
        SELECT * From(
        select rownum rnum,p.postno as postNo, title, postimg from post p
        inner join USERLIKE u
        on p.postno = u.postno WHERE userno = #{userNo} AND p.DELETEDDATE is NULL ORDER BY LIKEKEY DESC)
        where rnum <![CDATA[>=]]> #{idx} AND rnum <![CDATA[<]]> #{idx}+8
    </select>
    <select id="memberInfo" resultType="MemberDto" parameterType="int">
        select * from member where userno = #{userNo}
    </select>
    <select id="memberPassword" resultType="String" parameterType="int">
        select pw from member where userno = #{userNo}
    </select>
    <update id="memWithdraw" parameterType="int">
        update member set deleteddate = sysdate where userno = #{userNo}
    </update>
    <update id="updateEnterprise" parameterType="EnterpriseDto">
        update enterprise set tel=#{tel}, ceo=#{ceo}, address=#{address}, addressDetail=#{addressDetail} where enterpriseNo = #{enterpriseNo}
    </update>
    <select id="enterpriseInfo" resultType="EnterpriseDto" parameterType="int">
        select * from enterprise where enterpriseNo = #{enterpriseNo}
    </select>
    <select id="enterprisePassword" resultType="String" parameterType="int">
        select pw from enterprise where enterpriseNo = #{enterpriseNo}
    </select>
    <update id="updateEntPassword" parameterType="EnterpriseDto">
        update enterprise set pw = #{pw} where enterpriseNo=#{enterpriseNo}
    </update>
    <update id="entWithdraw" parameterType="int">
        update enterprise set deleteddate = sysdate where enterpriseNo = #{enterpriseNo}
    </update>
    <update id="entProfileImg" parameterType="EnterpriseDto">
        update enterprise set profile = #{profile} where enterpriseNo = #{enterpriseNo}
    </update>
    <select id="entPosts" resultType="PostPageDto" parameterType="Map">
        SELECT * FROM (
        SELECT ROWNUM rnum, POSTNO, likes, POSTIMG, regDate, title
        FROM ( SELECT u.POSTNO, COUNT(*) AS likes, p.POSTIMG, TO_CHAR(p.REGDATE, 'yyyy.mm.dd') AS regDate, p.title
        FROM USERLIKE u
        INNER JOIN POST p ON p.POSTNO = u.POSTNO
        INNER JOIN ENTERPRISE e ON p.ENTERPRISENO = e.ENTERPRISENO
        WHERE p.DELETEDDATE IS NULL AND p.ENTERPRISENO= #{enterpriseNo}
        GROUP BY u.POSTNO, p.POSTIMG, p.REGDATE, p.title
        ) ORDER BY regdate desc)
        WHERE rnum <![CDATA[>=]]> #{idx} and rnum <![CDATA[<]]> #{idx} + 10

    </select>
<!--    member review 조회-->
    <select id="memReview" resultType="Map" parameterType="Map">
<!--        SELECT a.* from-->
<!--        (SELECT rownum rnum, postimg, REVIEWNO, r.postno AS postno, r.title AS title,-->
<!--        to_char(r.regdate, 'yyyy.mm.dd') AS regdate, p.title AS postTitle, r.DELETEDDATE rivewdeleteddate,-->
<!--        p.DELETEDDATE AS postdeleteddate-->
<!--        FROM REVIEW r left JOIN post p-->
<!--        ON r.postno = p.postno WHERE USERno = #{no} and r.deleteddate is null) a-->
<!--        WHERE rnum <![CDATA[<]]> #{idx}+10 and rnum <![CDATA[>=]]> #{idx}-->

        SELECT b.* from(
        SELECT rownum as rnum, a.* from
        (SELECT postimg, REVIEWNO, r.postno AS postno, r.title AS title,
        to_char(r.regdate, 'yyyy.mm.dd') AS regdate, p.title AS postTitle, r.DELETEDDATE rivewdeleteddate,
        p.DELETEDDATE AS postdeleteddate
        FROM REVIEW r left JOIN post p
        ON r.postno = p.postno WHERE USERno = #{56} and r.deleteddate is NULL order BY regdate desc) a ) b
        WHERE rnum <![CDATA[<]]> #{idx}+10 and rnum <![CDATA[>=]]> #{idx}
    </select>
    <select id="merReviewsCount" resultType="int" parameterType="int">
        SELECT count(*) FROM REVIEW WHERE USERNO = ${no} AND DELETEDDATE IS null
    </select>
    <select id="totalMemWish" resultType="int" parameterType="int">
        SELECT count(*) FROM USERLIKE
        inner JOIN post ON
        post.postno = userlike.POSTNO WHERE userno = #{no} AND deleteddate IS null
    </select>
    <select id="totalEntPosts" parameterType="int" resultType="int">
        SELECT count(*) FROM post WHERE ENTERPRISENO = #{no} AND DELETEDDATE IS null
    </select>
</mapper>